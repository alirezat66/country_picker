// Mocks generated by Mockito 5.1.0 from annotations
// in lifetap_assignment/test/data/bloc/country_picker/country_picker_cubit_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:lifetap_assignment/data/model/country_list.dart' as _i4;
import 'package:lifetap_assignment/data/repository/country/country_repository_impl.dart'
    as _i3;
import 'package:lifetap_assignment/foundation/json_reader.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeJsonReader_0 extends _i1.Fake implements _i2.JsonReader {}

/// A class which mocks [CountryRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockCountryRepositoryImpl extends _i1.Mock
    implements _i3.CountryRepositoryImpl {
  MockCountryRepositoryImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.JsonReader get jsonReader =>
      (super.noSuchMethod(Invocation.getter(#jsonReader),
          returnValue: _FakeJsonReader_0()) as _i2.JsonReader);
  @override
  List<_i4.Country> get cachedCountries =>
      (super.noSuchMethod(Invocation.getter(#cachedCountries),
          returnValue: <_i4.Country>[]) as List<_i4.Country>);
  @override
  set cachedCountries(List<_i4.Country>? _cachedCountries) =>
      super.noSuchMethod(Invocation.setter(#cachedCountries, _cachedCountries),
          returnValueForMissingStub: null);
  @override
  _i5.Future<List<_i4.Country>> getCountries() =>
      (super.noSuchMethod(Invocation.method(#getCountries, []),
              returnValue: Future<List<_i4.Country>>.value(<_i4.Country>[]))
          as _i5.Future<List<_i4.Country>>);
  @override
  _i5.Future<List<_i4.Country>> search(String? query) =>
      (super.noSuchMethod(Invocation.method(#search, [query]),
              returnValue: Future<List<_i4.Country>>.value(<_i4.Country>[]))
          as _i5.Future<List<_i4.Country>>);
}

/// A class which mocks [CountryRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MyMockCountryRepositoryImpl extends _i1.Mock
    implements _i3.CountryRepositoryImpl {
  @override
  _i2.JsonReader get jsonReader =>
      (super.noSuchMethod(Invocation.getter(#jsonReader),
          returnValue: _FakeJsonReader_0()) as _i2.JsonReader);
  @override
  List<_i4.Country> get cachedCountries =>
      (super.noSuchMethod(Invocation.getter(#cachedCountries),
          returnValue: <_i4.Country>[]) as List<_i4.Country>);
  @override
  set cachedCountries(List<_i4.Country>? _cachedCountries) =>
      super.noSuchMethod(Invocation.setter(#cachedCountries, _cachedCountries),
          returnValueForMissingStub: null);
  @override
  _i5.Future<List<_i4.Country>> getCountries() =>
      (super.noSuchMethod(Invocation.method(#getCountries, []),
              returnValue: Future<List<_i4.Country>>.value(<_i4.Country>[]))
          as _i5.Future<List<_i4.Country>>);
  @override
  _i5.Future<List<_i4.Country>> search(String? query) =>
      (super.noSuchMethod(Invocation.method(#search, [query]),
              returnValue: Future<List<_i4.Country>>.value(<_i4.Country>[]))
          as _i5.Future<List<_i4.Country>>);
}
